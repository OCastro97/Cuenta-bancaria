-- Paso 1: creacion del TABLESPACE llamada PROYECTO_FINAL
-- ⚠️¡IMPORTANTE!⚠️ Crear carpeta de Proyecto y cambiar la ruta
CREATE TABLESPACE "PROYECTO_FINAL" LOGGING DATAFILE 'C:\Oracle\oradata\SYSTEM\orcl\Proyecto\PROYECTO_FINAL.dbf' SIZE 512M EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO;

-- Paso 2: creacion del usuario PROYECTO_FINAL 
CREATE USER "PROYECTO_FINAL" PROFILE "DEFAULT" IDENTIFIED BY "UP2020S1" DEFAULT TABLESPACE "PROYECTO_FINAL" TEMPORARY TABLESPACE "TEMP" ACCOUNT UNLOCK;

-- Paso 3: dar permiso al usuario PROYECTO_FINAL
GRANT "CONNECT" TO "PROYECTO_FINAL";
GRANT "RESOURCE" TO "PROYECTO_FINAL";

GRANT ALTER ANY INDEX TO "PROYECTO_FINAL";
GRANT ALTER ANY SEQUENCE TO "PROYECTO_FINAL";
GRANT ALTER ANY TABLE TO "PROYECTO_FINAL";
GRANT ALTER ANY TRIGGER TO "PROYECTO_FINAL";
GRANT CREATE ANY INDEX TO "PROYECTO_FINAL";
GRANT CREATE ANY SEQUENCE TO "PROYECTO_FINAL";
GRANT CREATE ANY SYNONYM TO "PROYECTO_FINAL";
GRANT CREATE ANY TABLE TO "PROYECTO_FINAL";
GRANT CREATE ANY TRIGGER TO "PROYECTO_FINAL";
GRANT CREATE ANY VIEW TO "PROYECTO_FINAL";
GRANT CREATE PROCEDURE TO "PROYECTO_FINAL";
GRANT CREATE PUBLIC SYNONYM TO "PROYECTO_FINAL";
GRANT CREATE TRIGGER TO "PROYECTO_FINAL";
GRANT CREATE VIEW TO "PROYECTO_FINAL";
GRANT DELETE ANY TABLE TO "PROYECTO_FINAL";
GRANT DROP ANY INDEX TO "PROYECTO_FINAL";
GRANT DROP ANY SEQUENCE TO "PROYECTO_FINAL";
GRANT DROP ANY TABLE TO "PROYECTO_FINAL";
GRANT DROP ANY TRIGGER TO "PROYECTO_FINAL";
GRANT DROP ANY VIEW TO "PROYECTO_FINAL";
GRANT INSERT ANY TABLE TO "PROYECTO_FINAL";
GRANT QUERY REWRITE TO "PROYECTO_FINAL";
GRANT SELECT ANY TABLE TO "PROYECTO_FINAL";
GRANT UNLIMITED TABLESPACE TO "PROYECTO_FINAL";

-- Paso 4: creacion de tablas dentro del usuario PROYECTO_FINAL con sus referencias

-- Agregar tablas de pais, provincia, distrito, CORREGIMIENTO

CREATE TABLE DIRECCION(
ID_DIR NUMBER(4) PRIMARY KEY NOT NULL,
ID_PAIS NUMBER(4) NOT NULL,
ID_PROVINCIA NUMBER(4) NOT NULL,
ID_DISTRITO NUMBER(4) NOT NULL,
ID_CORREG NUMBER(4) NOT NULL,
ID_CALLE NUMBER(4) NOT NULL
);

-- TABLA TIPO CLIENTE
CREATE TABLE TIPO_CLIENTE(
    ID_TIPO_CLI NUMBER(4) PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR(20) NOT NULL
)TABLESPACE PROYECTO_FINAL;
-- Tipo Cliente CORPORATIVO o INDIVIDUAL

-- TABLA DE CLIENTES
CREATE TABLE CLIENTES (
    ID_CLIENTE NUMBER(4) PRIMARY KEY NOT NULL,
    ID_TIPO_CLI NUMBER(4) NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    IDENTIFICACIÓN VARCHAR(50) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL
)TABLESPACE PROYECTO_FINAL;

--TABLA TIPO CUENTA
--TIPO DE CUENTA (INDIVIDUAL, CONJUNTO, CORPORATIVO)
CREATE TABLE TIPO_CUENTA(
    ID_TIPO_CUENTA NUMBER(4) PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR(20) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE CUENTAS
CREATE TABLE CUENTA(
    ID_CUENTA NUMBER(4) PRIMARY KEY,
    ID_CLIENTE NUMBER(4) NOT NULL,
    ID_TIPO_CUENTA NUMBER(4) NOT NULL,
    NUM_CUENTA VARCHAR(25) NOT NULL,
    SALDO DECIMAL(10, 2) NOT NULL,
    FECHA_APERTURA DATE NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE TIPO TRANSACCION
-- TIPO DE TRANSACCIÓN (DEPÓSITO, RETIRO, TRANSFERENCIA, ETC.)
CREATE TABLE TIPO_TRANSACCION(
    ID_TIPO_TRANS NUMBER(4) PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR(25) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE TRANSACCIONES
CREATE TABLE TRANSACCIONES (
    ID_TRANSACCION NUMBER(4) PRIMARY KEY NOT NULL,
    ID_CUENTA NUMBER(4) NOT NULL,
    FECHA DATE NOT NULL,
    MONTO DECIMAL(10, 2) NOT NULL,
    ID_TIPO_TRANS NUMBER(4) NOT NULL,
    CUENTA_DESTINO VARCHAR(25) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE PRÉSTAMOS
CREATE TABLE PRESTAMOS (
    ID_PRESTAMO NUMBER(4) PRIMARY KEY NOT NULL,
    ID_CLIENTE NUMBER(4) NOT NULL,
    MONTO DECIMAL(10, 2) NOT NULL,
    TASA_INTERES DECIMAL(5, 2) NOT NULL,
    PLAZO_MESES NUMBER(4) NOT NULL,
    FECHA_SOLICITUD DATE NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE INVERSIONES
CREATE TABLE INVERSIONES (
    ID_INVERSION NUMBER(4) PRIMARY KEY NOT NULL,
    ID_CLIENTE NUMBER(4) NOT NULL,
    MONTO DECIMAL(10, 2) NOT NULL,
    TIPO_INVERSION VARCHAR(20) NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_VENCIMIENTO DATE NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE EMPLEADOS
CREATE TABLE EMPLEADOS (
    ID_EMPLEADO NUMBER(4) PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    SALARIO DECIMAL(10, 2) NOT NULL,
    CARGO VARCHAR(50) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE DEPARTAMENTOS
CREATE TABLE DEPARTAMENTOS (
    ID_DEPARTAMENTO NUMBER(4) PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR(50)
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE ASIGNACIÓN DE EMPLEADOS A DEPARTAMENTOS
CREATE TABLE EMPLEADOS_DEPARTAMENTOS (
    ID_EMPLEADO NUMBER(4) NOT NULL,
    ID_DEPARTAMENTO NUMBER(4) NOT NULL,
    PRIMARY KEY (ID_EMPLEADO, ID_DEPARTAMENTO)
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE SUCURSALES
CREATE TABLE SUCURSALES (
    ID_SUCURSAL NUMBER(4) PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE PRODUCTOS
CREATE TABLE PRODUCTOS (
    ID_PRODUCTO NUMBER(4) PRIMARY KEY NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(100) NOT NULL,
    PRECIO DECIMAL(10, 2) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE VENTAS
CREATE TABLE VENTAS (
    ID_VENTA NUMBER(4) PRIMARY KEY NOT NULL,
    ID_PRODUCTO NUMBER(4) NOT NULL,
    ID_CLIENTE NUMBER(4) NOT NULL,
    CANTIDAD NUMBER(4) NOT NULL,
    FECHA DATE NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE REPORTES FINANCIEROS
CREATE TABLE REPORTES_FINANCIEROS (
    ID_REPORTE NUMBER(4) PRIMARY KEY NOT NULL,
    FECHA DATE NOT NULL,
    INGRESOS DECIMAL(10, 2) NOT NULL,
    EGRESOS DECIMAL(10, 2) NOT NULL,
    UTILIDADES DECIMAL(10, 2) NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE TARJETAS DE CRÉDITO
CREATE TABLE TARJETAS_CREDITO (
    ID_TARJETA NUMBER(4) PRIMARY KEY NOT NULL,
    ID_CLIENTE NUMBER(4) NOT NULL,
    LIMITE_CREDITO DECIMAL(10, 2) NOT NULL,
    SALDO_ACTUAL DECIMAL(10, 2) NOT NULL,
    FECHA_VENCIMIENTO DATE NOT NULL
)TABLESPACE PROYECTO_FINAL;

-- TABLA DE PAGOS DE TARJETAS DE CRÉDITO
CREATE TABLE PAGOS_TARJETAS (
    ID_PAGO NUMBER(4) PRIMARY KEY NOT NULL,
    ID_TARJETA NUMBER(4) NOT NULL,
    FECHA DATE NOT NULL,
    MONTO DECIMAL(10, 2) NOT NULL
)TABLESPACE PROYECTO_FINAL;

CREATE TABLE EMPRESA(
    ID_EMPRESA NUMBER(4) NOT NULL PRIMARY KEY,
    ID_ROL NUMBER(2) DEFAULT 2,
    NOMBRE VARCHAR(25) NOT NULL,
    ACRONIMO VARCHAR(25) NOT NULL,
    NIF VARCHAR(25) NOT NULL UNIQUE,
    TELEFONO VARCHAR(15) NOT NULL,
    CORREO VARCHAR(25) NOT NULL,
    PASS VARCHAR(15) NOT NULL,
    ID_DIR NUMBER(4) NOT NULL,
    ID_TIPO_CUENTA NUMBER(4) NOT NULL,
    ID_SERV NUMBER(2) NOT NULL
);

CREATE TABLE DIR_EMPRESA(
    ID_DIR NUMBER(4) NOT NULL PRIMARY KEY,
    PROVINCIA VARCHAR(25) NOT NULL,
    DISTRITO VARCHAR(25) NOT NULL,
    CORREGIMIENTO VARCHAR(25) NOT NULL
);

CREATE TABLE CALLE_EMPR(
    ID_CALLE NUMBER(4) NOT NULL PRIMARY KEY,
    CALLE VARCHAR(25) NOT NULL,
    TIPO_LOCAL VARCHAR(20) NOT NULL,
    NUM_LOCAL VARCHAR(20) NOT NULL,
    ID_EMPRESA NUMBER(4) NOT NULL
);
--PASO 5: realizar REFERENCIAS a las tablas

ALTER TABLE DIR_EMPRESA ADD CONSTRAINT FK_EMPRESA_DIR FOREIGN KEY(ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA) ON DELETE CASCADE; 

ALTER TABLE CALLE_EMPR ADD CONSTRAINT FK_CALLE_EMPR FOREIGN KEY(ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA) ON DELETE CASCADE; 

ALTER TABLE CUENTA_EMP ADD CONSTRAINT FK_CUENTA_EMPR FOREIGN KEY(ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA) ON DELETE CASCADE; 

ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIR_PAIS FOREIGN KEY (ID_PAIS) REFERENCES PAIS (ID_PAIS);

ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIR_PROV FOREIGN KEY (ID_PROVINCIA) REFERENCES PROVINCIA (ID_PROVINCIA);

ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIR_DIST FOREIGN KEY (ID_DISTRITO) REFERENCES DISTRITO (ID_DISTRITO);

ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIR_CORREG FOREIGN KEY (ID_CORREG) REFERENCES CORREGIMIENTO (ID_CORREG);

ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIR_CALLE FOREIGN KEY (ID_CALLE) REFERENCES CALLE (ID_CALLE);

-- FOREIGN KEY (ID_TIPO_CLI) REFERENCES TIPO_CLIENTE(ID_TIPO_CLI)
ALTER TABLE PROYECTO_FINAL.CLIENTES ADD CONSTRAINT FK_CLIENTE_TIPO_CLI FOREIGN KEY ("ID_TIPO_CLI") REFERENCES PROYECTO_FINAL.TIPO_CLIENTE("ID_TIPO_CLI") ON DELETE CASCADE;

-- FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE),
ALTER TABLE PROYECTO_FINAL.CUENTA ADD CONSTRAINT FK_CUENTA_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES PROYECTO_FINAL.CLIENTES("ID_CLIENTE") ON DELETE CASCADE;

-- FOREIGN KEY (ID_TIPO_CUENTA) REFERENCES TIPO_CUENTA(ID_TIPO_CUENTA)
ALTER TABLE PROYECTO_FINAL.CUENTA ADD CONSTRAINT FK_CUENTA_TIPO_CUENTA FOREIGN KEY ("ID_TIPO_CUENTA") REFERENCES PROYECTO_FINAL.TIPO_CUENTA("ID_TIPO_CUENTA");

-- FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA(ID_CUENTA)
ALTER TABLE PROYECTO_FINAL.TRANSACCIONES ADD CONSTRAINT FK_TRANSACCION_CUENTA FOREIGN KEY ("ID_CUENTA") REFERENCES PROYECTO_FINAL.CUENTA("ID_CUENTA") ON DELETE CASCADE;

-- FOREIGN KEY (ID_TIPO_TRANS) REFERENCES TIPO_TRANSACCION(ID_TIPO_TRANS)
ALTER TABLE PROYECTO_FINAL.TRANSACCIONES ADD CONSTRAINT FK_TRANSACCION_TIPO FOREIGN KEY ("ID_TIPO_TRANS") REFERENCES PROYECTO_FINAL.TIPO_TRANSACCION("ID_TIPO_TRANS");

-- -FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
ALTER TABLE PROYECTO_FINAL.PRESTAMOS ADD CONSTRAINT FK_PRESTAMO_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES PROYECTO_FINAL.CLIENTES("ID_CLIENTE") ON DELETE CASCADE;

-- FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
ALTER TABLE PROYECTO_FINAL.INVERSIONES ADD CONSTRAINT FK_INVERSION_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES PROYECTO_FINAL.CLIENTES("ID_CLIENTE") ON DELETE CASCADE;

-- FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADOS(ID_EMPLEADO),
ALTER TABLE PROYECTO_FINAL.EMPLEADOS_DEPARTAMENTOS ADD CONSTRAINT FK_EMPLEADOS_DEPART FOREIGN KEY ("ID_EMPLEADO") REFERENCES PROYECTO_FINAL.EMPLEADOS("ID_EMPLEADO") ON DELETE CASCADE;

-- FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
ALTER TABLE PROYECTO_FINAL.EMPLEADOS_DEPARTAMENTOS ADD CONSTRAINT FK_EMPL_DEPART_DEPART FOREIGN KEY ("ID_DEPARTAMENTO") REFERENCES PROYECTO_FINAL.DEPARTAMENTOS("ID_DEPARTAMENTO");

-- FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO),
ALTER TABLE PROYECTO_FINAL.VENTAS ADD CONSTRAINT FK_VENTA_PRODUCTO FOREIGN KEY ("ID_PRODUCTO") REFERENCES PROYECTO_FINAL.PRODUCTOS("ID_PRODUCTO") ON DELETE CASCADE;

-- FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
ALTER TABLE PROYECTO_FINAL.VENTAS ADD CONSTRAINT FK_VENTA_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES PROYECTO_FINAL.CLIENTES("ID_CLIENTE") ON DELETE CASCADE;

-- FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
ALTER TABLE PROYECTO_FINAL.TARJETAS_CREDITO ADD CONSTRAINT FK_TARJETA_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES PROYECTO_FINAL.CLIENTES("ID_CLIENTE") ON DELETE CASCADE;

-- FOREIGN KEY (ID_TARJETA) REFERENCES TARJETAS_CREDITO(ID_TARJETA)
ALTER TABLE PROYECTO_FINAL.PAGOS_TARJETAS ADD CONSTRAINT FK_PAGO_TARJETA FOREIGN KEY ("ID_TARJETA") REFERENCES PROYECTO_FINAL.TARJETAS_CREDITO("ID_TARJETA") ON DELETE CASCADE;

ALTER TABLE TRANSACCIONES ADD CONSTRAINT FK_TRANSAC_CLIENTE FOREIGN KEY ("ID_CLIENTE") REFERENCES CLIENTE("ID_CLIENTES") ON DELETE CASCADE;


-- Realizando datos unicos
ALTER TABLE CLIENTES ADD CONSTRAINT UQ_CLIENT_IDEN
UNIQUE (IDENTIFICACION);



















-- Creación de código de backup programable que sea después de la jornada laboral
@echo off

rem Establecer variables de entorno de Oracle
set ORACLE_SID=System
set ORACLE_HOME=C:\WINDOWS.X64_193000_db_home

rem Establecer la fecha y hora para el nombre del archivo de respaldo (ejemplo)
set DATE=%DATE:/=-%
set TIME=%TIME::=-%
set TIME=%TIME:.=-%
set FILENAME=respaldo_%DATE%_%TIME%.dmp

em Realizar la exportación de la base de datos
%ORACLE_HOME%\bin\expdp System/root12345 directory=DATA_PUMP_DIR dumpfile=%FILENAME% logfile=respaldo_%DATE%_%TIME%.log schemas=PROYECTO_FINAL

echo El respaldo de la base de datos se ha completado correctamente.





















SELECT *
FROM tabla1
INNER JOIN tabla2 ON tabla1.columna1 = tabla2.columna1
INNER JOIN tabla3 ON tabla2.columna2 = tabla3.columna2
INNER JOIN tabla4 ON tabla3.columna3 = tabla4.columna3;